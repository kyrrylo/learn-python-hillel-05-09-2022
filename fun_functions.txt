Кожне завдання - це завдання на створення функції def.

1. Отримання інформації про частину списку
Складність: 1/5
Параметри:
	список
	індекс (ціле число)
	так флаг left/right (наприклад left=True це left, left=False це right)
Повертає: всі елементи списку що лівіше індексу (left=True) або правіше (left=False)
Наприклад:
	function([5, 6, 3, 2, 1], 2, left=True) -> [5, 6]
	function([5, 6, 3, 2, 1], 2, left=False) -> [2, 1]
	function([5, 6, 3, 2, 1], 10, left=False) -> []
Підказка: використання slice

2. Пошук усіх підстрок
Складність: 2/5
Параметри:
	строка/текст
	підстрока
	чутливість до регістру
Повертає: список усіх індекси початку підстроки у строки/тексту
Наприклад:
	function('This is my code', 'S', case_sensitive=False) -> [3, 6]
	function('This is your code', 'S', case_sensitive=True) -> []
	function('This is your code', 'is', case_sensitive=True) -> [2, 5]
Підказка: метод find та використання slice

3. Банківський вклад ( https://fincult.info/calc/deposit/ як перевірка)
Складність: 1/5
Параметри:
	сума вкладу
	тривалість строку (у роках)
	процентна ставка %
	капіталізація так/ні
Повертає: суму у кінці строку
Наприклад:
	function(25000, 1, 5, False) -> 26250
	function(10000, 5, 10, False) -> 15000

4. Генератор частин списку
Складність: 4/5
Параметри:
	список
	розмір частини
Повертає (генерує): частини списка
Наприклад:
	function([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 2) -> [1, 2]; [3, 4]; [5, 6]; [7, 8]; [9, 10]; [11]
Підказка: використання slice і ключового слова yield

5. Просте число до 100 ( https://uk.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D1%81%D1%82%D0%B5_%D1%87%D0%B8%D1%81%D0%BB%D0%BE )
Складність: 2/5
Параметри:
	ціле число (до 100)
Повертає: флаг чи є число простим
Наприклад:
	function(5) -> True
	function(8) -> False
	function(37) -> True
Підказка: мати перелік простих чисел (до 100) і перевіряти на наявність: "x in simple_set" (бажано використати set() {2, 3, 5, 7...})

6. Фільтр простих чисел до 100
Складність: 3/5
Параметри:
	цілі числа (до 100)
Повертає: список простих чисел
Наприклад:
	function(5, 2, 22) -> [5, 2]
	function() -> []
	function(4, 6, 7, 8, 16, 37) -> [7, 37]
Підказка: використовувати синтаксис def function(*args): - приймає від 0 до нескінченності параметрів, у функції можна використовувати як список

7. Таймер
Складність: 2/5
Параметри:
	ціле число (секунди)
Повертає: повідомлення кожної секунди скільки часу залишилось та повідомлення коли час вийшов
Наприклад:
	function(6):
		6
		5
		4
		3
		2
		1
		Тум-тум, 6 секунд вже пройшло!
Підказка: метод sleep з модулю time

8. Таймер (покращена версія)
Складність: 3/5
Параметри:
	datetime.timedelta об'єкт
Повертає: повідомлення кожної секунди скільки часу залишилось та повідомлення коли час вийшов
Наприклад:
	function(timedelta(minutes=2, seconds=30)):
		2м30с
		2м29с
		2м28с
		...
		0м01с
		Тум-тум, 2 хвилини 30 секунд вже пройшло!
Підказка: клас timedelta з модулю datetime

9. Будильник
Складність: 3/5
Параметри:
	година коли дзвонити
	хвилина коли дзвонити
Повертає: повідомлення у заданий час
Наприклад:
	function(hour=9, minute=30):
		9:29 ...
		9:30: Dzzzz!
Підказка: клас time з модулю datetime

10. Трикутник Паскаля ( https://uk.wikipedia.org/wiki/%D0%A2%D1%80%D0%B8%D0%BA%D1%83%D1%82%D0%BD%D0%B8%D0%BA_%D0%9F%D0%B0%D1%81%D0%BA%D0%B0%D0%BB%D1%8F )
Складність: 4/5
Параметри:
	ціле число
Повертає: стільки рядів трикутнику Паскаля, скільки вказано в параметрі
Наприклад:
	function(1):
		1
	function(3):
		  1
		 1 1
		1 2 1
	function(5):
		    1
		   1 1
		  1 2 1
		 1 3 3 1
		1 4 6 4 1
Підказка: для виведення на екран, використовуйте паддінг строк ( https://pyformat.info/ ):
f'{test:^10}' -> "   test   "

11. Секунди у дні/години/хвилини
Складність: 3/5
Параметри:
	ціле число
Повертає: словник з ключами days, hours, minutes, seconds та їх відповідними значеннями
Наприклад:
	function(60 * 60 + 30) -> {"days": 0, "hours": 1, "minutes": 0, "seconds": 30}
	function(60 * 60 * 25) -> {"days": 1, "hours": 1, "minutes": 0, "seconds": 0}
	function(60 * 20 + 15) -> {"days": 0, "hours": 0, "minutes": 20, "seconds": 15}
Підказка: метод divmod та таблиця конвертацій
	1 день = 24 години
	1 година = 60 хвилин
	1 хвилина = 60 секунд

12. Тип файлу (розширення)
Складність: 1/5
Параметри:
	filename
Повертає: розширення файлу
Наприклад:
	function('file.txt') -> 'txt'
	function('path/to/file.exe') -> 'exe'
	function('path/to/archive.docx.zip') -> 'zip'
Підказка: метод rfind

13. Нумерологія)
Складність: 1/5
Параметри:
	ціле число
Повертає: суму цифр числа
Наприклад:
	function(252) -> 9
	function(2022) -> 6